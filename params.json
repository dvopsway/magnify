{"name":"Magnify","tagline":"A django based tool that enables you to generate dynamic reports from relational databases (mysql , mssql).","body":"# **Magnify**\r\n- Python-Version - python 2.7.9\r\n- App-version : 0.1\r\n\r\n## **Project Description**\r\n\r\ngenerating reports from rdbms systems(mysql, mssql, etc) is very common in the field of information technology. Often we will just create custom php scripts to get what we want. Magnify looks at the same problem as a framework. In Magnify you can create reports dynamically by passing data at the time of generating reports.\r\n\r\nfor eg: Suppose there is table 'testdata' and has muliple columns , one of the column is date_field\r\n\r\nNow you usually get data using the query below, where you basically replace the date field everytime you need to generate a report.\r\n\r\n```sql\r\nSELECT *FROM `testdata`WHERE (date_field BETWEEN '2010-01-30' AND '2010-09-29')\r\n```\r\n\r\nWith magnigy you basically make these date values variable, and tell magnify what type of these two values are, You need to tell magnify that FROM_DATE, TO_DATE are variables of type date. hence when you select a query , you are asked for these variables in an html form , in this case it will be a date picker.\r\n\r\n```sql\r\nSELECT *FROM `testdata`WHERE (date_field BETWEEN FROM_DATE AND TO_DATE)\r\n```\r\n\r\nOnce you provide that data , your report is generated , now you can export it as csv, pdf, (in future email support will be added), etc.\r\n## **Reqiurements**\r\nfirst things first , lets get all the dependencies out of the way\r\n\r\n- install freetds (Google up on this , in case you face issues)\r\n\r\n    - install on Mac:\r\n\r\n      ```\r\n         brew install freetds\r\n      ```\r\n\r\n    - install on unix:\r\n\r\n      ```\r\n         yum install freetds freetds-devel\r\n      ```\r\n\r\n    - install on windows:\r\n\r\n      download from following link : [Download FreeTDS](http://sourceforge.net/projects/freetdswindows/).\r\n\r\n- python packages required\r\n\r\n```python\r\n  pip install django\r\n  pip install mysql-python\r\n  pip install pymssql\r\n  pip install reportlab\r\n```\r\n\r\n## **Setup**\r\n\r\nCreate a db in mysql setup name it 'magnigy'\r\n```sql\r\ncreate database magnigy\r\n```\r\n\r\nopen setting.py and update db connection settings of the database in which you created magnify db\r\n```python\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.mysql',\r\n        'NAME': 'magnify',\r\n        'USER': 'username',\r\n        'PASSWORD': 'password',\r\n        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on\r\n        'PORT': '3306',\r\n        }\r\n}\r\n```\r\n\r\nWhen done with this you need to run below to generate schema for project\r\n```python\r\npython manage.py schemamigration reporttool\r\n```\r\n\r\nNow run syncdb on django app to create actual tables, create an admin account too.\r\n```python\r\npython manage.py syncdb\r\n```\r\n\r\nNow try running the app using\r\n```python\r\npython manage.py runserver 0.0.0.0:8000\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}